// <auto-generated />
using System;
using ISPoliceAppApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ISPoliceAppApi.Migrations
{
    [DbContext(typeof(ISPoliceAppApiDbContext))]
    [Migration("20220622042239_MakeSomeFieldsNotRequiredLeaders")]
    partial class MakeSomeFieldsNotRequiredLeaders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ISPoliceAppApi.DSR.ControlRoomDSR", b =>
                {
                    b.Property<int>("ControlRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Complainant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplainantAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Do")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dr")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GivenBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PSId")
                        .HasColumnType("int");

                    b.Property<string>("PSName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SOC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TakenBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<string>("TotalAccused")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("ControlRoomId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ControlRoomDSR");
                });

            modelBuilder.Entity("ISPoliceAppApi.DSR.ControlRoomDSRAccused", b =>
                {
                    b.Property<int>("ControlRoomAccusedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccusedAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccusedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ControlRoomId")
                        .HasColumnType("int");

                    b.Property<string>("CrimeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HSNbr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SectionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ControlRoomAccusedId");

                    b.HasIndex("ControlRoomId");

                    b.ToTable("ControlRoomDSRAccused");
                });

            modelBuilder.Entity("ISPoliceAppApi.DSR.ControlRoomDSRAccusedDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CrimeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DSRAccusedId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SectionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DSRAccusedId");

                    b.ToTable("ControlRoomDSRAccusedDetail");
                });

            modelBuilder.Entity("ISPoliceAppApi.DSR.ControlRoomDSRCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("ControlRoomDSRCategory");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Allegation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccusedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccusedPosting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccusedRank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complainant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplaintDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfComplaint")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonalProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Allegations");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.CaseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Court")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dsr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Goondas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Head")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("io")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ps")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("CaseDetail");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.CategoryMaster", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("CategoryId");

                    b.ToTable("CategoryMaster");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.DistrictMaster", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("DistrictId");

                    b.HasIndex("ZoneId");

                    b.ToTable("DistrictMaster");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaderId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("SubLeaderId")
                        .HasColumnType("int");

                    b.Property<int>("SubOrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Leader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NativeDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationLeaderId")
                        .HasColumnType("int");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionInTheParty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentPartyAffiliation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("StrinkingPersonalityTrait")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubOrganizationLeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Leaders");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.LeaderEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.ToTable("LeaderEvents");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.LeaderMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaderId")
                        .HasColumnType("int");

                    b.Property<string>("LeaderMediaPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaderMediaUrl")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.ToTable("LeaderMedias");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.LeaderPoliticalBackground", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PositionYear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.ToTable("LeaderPoliticalBackgrounds");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.LeadersGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("LeadersGroups");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.MaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Maritals");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FlagPath")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("FlagUrl")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ideology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SymbolPath")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("SymbolUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("OrganizationId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.OrganizationEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationEvents");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.OrganizationMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MediaPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationMedias");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Organization_Sub_Events_Rs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("SubOrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Organization_Sub_Events_Rs");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Organization_Sub_Leaders_Rs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LeadersId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("SubOrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Organization_Sub_Leaders_Rs");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GangId")
                        .HasColumnType("int");

                    b.Property<int?>("GangMemberType")
                        .HasColumnType("int");

                    b.Property<string>("HistorySheetNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModusOperandi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.HasIndex("StatusId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLabel")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'')")
                        .HasMaxLength(50);

                    b.Property<string>("AddressText")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500);

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonAddress");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonAliasName", b =>
                {
                    b.Property<int>("AliasNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AliasName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("AliasNameId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonAliasName");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonCaseHistory", b =>
                {
                    b.Property<int>("CaseHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<int>("CaseStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("CaseHistoryId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonCaseHistory");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonMedia", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MediaActualName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("MediaLabel")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'')")
                        .HasMaxLength(50);

                    b.Property<string>("MediaPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("MediaId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonMedia");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonPersonType", b =>
                {
                    b.Property<int>("PersonPersonTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("PersonTypeId")
                        .HasColumnType("int");

                    b.HasKey("PersonPersonTypeId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonTypeId");

                    b.ToTable("PersonPersonType");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonRivalGang", b =>
                {
                    b.Property<int>("RivalGangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GangId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("RivalGangId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonRivalGang");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonStatusMaster", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StatusId");

                    b.ToTable("PersonStatusMaster");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonTypeMaster", b =>
                {
                    b.Property<int>("PersonTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PersonTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PersonTypeId");

                    b.ToTable("PersonTypeMaster");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Personnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfEnlistment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfJoiningPresentPosting")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOffBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonnelFamilyId")
                        .HasColumnType("int");

                    b.Property<string>("PersonnelPhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonnelPhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentPosting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("PersonnelFamilyId");

                    b.HasIndex("ReligionId");

                    b.ToTable("Personnels");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelAllegationEnquiry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MOMPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOMUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemorandumPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemorandumUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutComePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutComeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipantPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipantUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId");

                    b.ToTable("AllegationEnquiries");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelCaseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CaseCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CaseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseSection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId");

                    b.ToTable("PersonnelCaseDetails");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelEducationalBackground", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AdmissionYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourseOfStudy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GraduationYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<string>("QualificationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId");

                    b.ToTable("PersonnelEducationalBackgrounds");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spouse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonnelFamilies");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelGallantryAward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwardDocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GallantryAwardPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GallantryAwardUrl")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("IssueingAuthority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssuingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId");

                    b.ToTable("PersonnelGallantryAwards");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelPosting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId");

                    b.ToTable("PersonnelPostings");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelPreviousAllegation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId");

                    b.ToTable("PersonnelPreviousAllegations");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelWarningOrPunishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WarningCreatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonnelId");

                    b.ToTable("PersonnelWarningOrPunishments");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileAbstract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttmptMurder")
                        .HasColumnType("int");

                    b.Property<int?>("ChainSnatch")
                        .HasColumnType("int");

                    b.Property<int?>("DistCity")
                        .HasColumnType("int");

                    b.Property<int?>("DistCityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HbDay")
                        .HasColumnType("int");

                    b.Property<int?>("HbNight")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Jurisdiction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MobileSnatch")
                        .HasColumnType("int");

                    b.Property<int?>("Murder")
                        .HasColumnType("int");

                    b.Property<int?>("Ndps")
                        .HasColumnType("int");

                    b.Property<int?>("OtherCase")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("Robbery")
                        .HasColumnType("int");

                    b.Property<int?>("TechCase")
                        .HasColumnType("int");

                    b.Property<int?>("TotalCase")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileAbstract");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileAlias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileAlias");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileAssociates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssociatesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociatesId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileAssociates");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileChildren", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileChildren");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProfileMaster");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileSibling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("relation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileSibling");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileSpouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileSpouse");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Bail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BailDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MartialStatus")
                        .HasColumnType("int");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOfGoondas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityProceeding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateOfInitiation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("ProfileTransaction");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Religions");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.StationMaster", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StationId");

                    b.HasIndex("DistrictId");

                    b.ToTable("StationMaster");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.SubCategoryMaster", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategoryMaster");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.SubOrganizationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("SubOrganizationCategories");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.SubOrganizationEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subOrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("subOrganizationId");

                    b.ToTable("SubOrganizationEvents");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.SubOrganizationLeaders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubOrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubOrganizationId");

                    b.ToTable("SubOrganizationLeaders");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Venue", b =>
                {
                    b.Property<int>("VenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("VenueId");

                    b.ToTable("Venue");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.VenuePermissionType", b =>
                {
                    b.Property<int>("VenuePermissionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("VenueId")
                        .HasColumnType("int");

                    b.Property<string>("VenuePermissionTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("VenuePermissionTypeId");

                    b.HasIndex("VenueId");

                    b.ToTable("VenuePermissionType");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.WorkflowMaster", b =>
                {
                    b.Property<int>("WorkflowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("WorkflowName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("WorkflowId")
                        .HasName("PK__WorkflowMaster");

                    b.ToTable("WorkflowMaster");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ZoneMaster", b =>
                {
                    b.Property<int>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ZoneId");

                    b.ToTable("ZoneMaster");
                });

            modelBuilder.Entity("ISPoliceAppApi.DSR.ControlRoomDSR", b =>
                {
                    b.HasOne("ISPoliceAppApi.DSR.ControlRoomDSRCategory", "ControlRoomCategory")
                        .WithMany("ControlRoomDSRs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.DSR.ControlRoomDSRAccused", b =>
                {
                    b.HasOne("ISPoliceAppApi.DSR.ControlRoomDSR", "ControlRoom")
                        .WithMany("ControlRoomDSRAccuseds")
                        .HasForeignKey("ControlRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.DSR.ControlRoomDSRAccusedDetail", b =>
                {
                    b.HasOne("ISPoliceAppApi.DSR.ControlRoomDSRAccused", "DSRAccused")
                        .WithMany("ControlRoomDSRAccusedDetails")
                        .HasForeignKey("DSRAccusedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.CaseDetail", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.ProfileMaster", "ProfileDetail")
                        .WithMany("CaseDetails")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.DistrictMaster", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.ZoneMaster", "Zone")
                        .WithMany("DistrictMaster")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_DistrictMaster_ZoneMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.LeaderEvent", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Leader", null)
                        .WithMany("LeaderEvents")
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.LeaderMedia", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Leader", null)
                        .WithMany("LeaderMedia")
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.LeaderPoliticalBackground", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Leader", null)
                        .WithMany("LeaderPoliticalBackgrounds")
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.LeadersGroup", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.OrganizationEvent", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Organization", "Organization")
                        .WithMany("OrganizationEvent")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.OrganizationMedia", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Organization", "Organization")
                        .WithMany("OrganizationMedia")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Person", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.PersonStatusMaster", "Status")
                        .WithMany("Person")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Person_PersonStatusMaster");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonAddress", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Person", "Person")
                        .WithMany("PersonAddress")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_PersonAddress_Person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonAliasName", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Person", "Person")
                        .WithMany("PersonAliasName")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_PersonAliasName_Person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonCaseHistory", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Person", "Person")
                        .WithMany("PersonCaseHistory")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_PersonCaseHistory_Person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonMedia", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Person", "Person")
                        .WithMany("PersonMedia")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_PersonMedia_Person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonPersonType", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Person", "Person")
                        .WithMany("PersonPersonType")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_PersonPersonType_Person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ISPoliceAppApi.Models.PersonTypeMaster", "PersonType")
                        .WithMany("PersonPersonType")
                        .HasForeignKey("PersonTypeId")
                        .HasConstraintName("FK_PersonPersonType_PersonTypeMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonRivalGang", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Person", "Person")
                        .WithMany("PersonRivalGang")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_PersonRivalGang_Person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.Personnel", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("ISPoliceAppApi.Models.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId");

                    b.HasOne("ISPoliceAppApi.Models.PersonnelFamily", "PersonnelFamily")
                        .WithMany()
                        .HasForeignKey("PersonnelFamilyId");

                    b.HasOne("ISPoliceAppApi.Models.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId");
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelAllegationEnquiry", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Personnel", "Personnel")
                        .WithMany("PersonnelAllegationEnquiries")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelCaseDetail", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Personnel", "Personnel")
                        .WithMany("PersonnelCaseDetails")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelEducationalBackground", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Personnel", "Personnel")
                        .WithMany("PersonnelEducationalBackgrounds")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelGallantryAward", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Personnel", "Personnel")
                        .WithMany("PersonnelGallantryAwards")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelPosting", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Personnel", "Personnel")
                        .WithMany("PersonnelPostings")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelPreviousAllegation", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Personnel", "Personnel")
                        .WithMany("PersonnelPreviousAllegations")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.PersonnelWarningOrPunishment", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Personnel", "Personnel")
                        .WithMany("PersonnelWarningOrPunishments")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileAbstract", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.ProfileMaster", "ProfileDetail")
                        .WithMany("ProfileAbstracts")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileAlias", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.ProfileMaster", "ProfileDetail")
                        .WithMany("ProfileAlias")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileAssociates", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.ProfileMaster", "AssociatesProfileDetail")
                        .WithMany("AssociatesProfiles")
                        .HasForeignKey("AssociatesId")
                        .HasConstraintName("FK_AssociatesProfile_Profile")
                        .IsRequired();

                    b.HasOne("ISPoliceAppApi.Models.ProfileMaster", "PrimaryProfileDetail")
                        .WithMany("ProfileAssociates")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK_PrimaryProfileDetail_Profile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileChildren", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.ProfileMaster", "ProfileDetail")
                        .WithMany("ProfileChildrens")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileSibling", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.ProfileMaster", "ProfileDetail")
                        .WithMany("ProfileSiblings")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileSpouse", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.ProfileMaster", "ProfileDetail")
                        .WithMany("ProfileSpouses")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.ProfileTransaction", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.ProfileMaster", "ProfileMaster")
                        .WithOne("ProfileTransaction")
                        .HasForeignKey("ISPoliceAppApi.Models.ProfileTransaction", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.StationMaster", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.DistrictMaster", "District")
                        .WithMany("StationMaster")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK_StationMaster_DistrictMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.SubCategoryMaster", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.CategoryMaster", "Category")
                        .WithMany("SubCategoryMaster")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_SubCategoryMaster_CategoryMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.SubOrganizationCategory", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Organization", "Organization")
                        .WithMany("SubOrganizationCategory")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.SubOrganizationEvent", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.SubOrganizationCategory", "SubOrganizationCategory")
                        .WithMany()
                        .HasForeignKey("subOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.SubOrganizationLeaders", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.SubOrganizationCategory", "SubOrganizationCategory")
                        .WithMany()
                        .HasForeignKey("SubOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISPoliceAppApi.Models.VenuePermissionType", b =>
                {
                    b.HasOne("ISPoliceAppApi.Models.Venue", "Venue")
                        .WithMany("VenuePermissionType")
                        .HasForeignKey("VenueId")
                        .HasConstraintName("FK_VenuePermissionType_Venue")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
